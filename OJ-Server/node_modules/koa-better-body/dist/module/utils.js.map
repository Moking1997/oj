{"version":3,"sources":["utils.js"],"names":["extend","formidable","querystring","bodyParsers","defaultOptions","options","cfg","types","defaultTypes","extendTypes","opts","fields","files","multipart","textLimit","formLimit","jsonLimit","jsonStrict","detectJSON","bufferLimit","buffer","strict","delimiter","decodeURIComponent","unescape","maxKeys","sep","urlencodedLimit","onError","onĞ•rror","onerror","handler","noopHandler","allTypes","text","form","json","isValid","method","includes","toUpperCase","setParsers","ctx","app","qs","request","bind","thunk","done","fileFields","IncomingForm","on","name","file","push","field","hasOwnProperty","Array","isArray","parse","req","parseBody","next","custom","length","is","call","urlencoded","res","body","limit","result"],"mappings":"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","sourcesContent":["import extend from 'extend-shallow';\nimport formidable from 'formidable';\nimport querystring from 'querystring';\nimport bodyParsers from 'koa-body-parsers';\n\n/**\n * > Default options that will be loaded. Pass `options` to overwrite them.\n *\n * @param  {Object} `options`\n * @return {Object}\n * @api private\n */\nexport function defaultOptions(options = {}) {\n  const cfg = { ...options };\n\n  const types = defaultTypes(cfg.extendTypes);\n  const opts = extend(\n    {\n      fields: false,\n      files: false,\n      multipart: true,\n      textLimit: false,\n      formLimit: false,\n      jsonLimit: false,\n      jsonStrict: true,\n      detectJSON: false,\n      bufferLimit: false,\n      buffer: false,\n      strict: true,\n\n      // query string `parse` options\n      delimiter: '&',\n      decodeURIComponent: querystring.unescape,\n      maxKeys: 1000,\n    },\n    cfg,\n  );\n\n  opts.delimiter = opts.sep || opts.delimiter;\n  opts.formLimit = opts.formLimit || opts.urlencodedLimit;\n  opts.extendTypes = types;\n  opts.onError = opts.onĞ•rror || opts.onerror;\n  opts.onError = typeof opts.onError === 'function' ? opts.onError : false;\n\n  opts.delimiter = typeof opts.delimiter === 'string' ? opts.delimiter : '&';\n\n  if (typeof opts.handler !== 'function') {\n    // eslint-disable-next-line no-empty-function\n    opts.handler = function* noopHandler() {};\n  }\n  if (typeof opts.detectJSON !== 'function') {\n    opts.detectJSON = function detectJSON() {\n      return false;\n    };\n  }\n\n  return opts;\n}\n\n/**\n * > Only extend/overwrite default accept types.\n *\n * @param  {Object} `types`\n * @return {Object}\n * @api private\n */\nexport function defaultTypes(types = {}) {\n  const allTypes = { ...types };\n\n  return extend(\n    {\n      multipart: ['multipart/form-data'],\n      text: ['text/*'],\n      form: ['application/x-www-form-urlencoded'],\n      json: [\n        'application/json',\n        'application/json-patch+json',\n        'application/vnd.api+json',\n        'application/csp-report',\n      ],\n      buffer: ['text/*'],\n    },\n    allTypes,\n  );\n}\n\n/**\n * > Is \"valid\" request method, according to IETF Draft.\n *\n * @see   https://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-19#section-6.1\n * @param  {String} `method` koa request method\n * @return {Boolean}\n * @api private\n */\nexport function isValid(method) {\n  return !['GET', 'HEAD', 'DELETE'].includes(method.toUpperCase());\n}\n\n/**\n * > Add `koa-body-parsers` to the koa context. In addition\n * also adds the formidable as multipart parser.\n *\n * @param  {Object} `ctx` koa context\n * @param  {Object} `opts` default options\n * @return {Object} `ctx` koa context\n * @api private\n */\nexport function setParsers(ctx, opts) {\n  ctx.app.querystring =\n    opts.querystring ||\n    opts.qs || // alias\n    (ctx.app && ctx.app.querystring) ||\n    (ctx.app && ctx.app.qs) || // alias\n    ctx.qs; // alias\n\n  bodyParsers(ctx);\n\n  // to do: when using koa-body-parsers v3.1 - it adds support for this and\n  // probably will break us in some way.\n  // delete ctx.request.body;\n\n  ctx.request.multipart = multipart.bind(ctx);\n  return ctx;\n}\n\n/**\n * > Formidable wrapper as multipart parser to make\n * thunk that later can be yielded. Also allows you to pass\n * formidable.IncomingForm instance to `options.IncomingForm`.\n *\n * @param  {Object} `options` passed or default plugin options\n * @param  {Object} `ctx` koa context\n * @return {Function} thunk\n * @api private\n */\nexport function multipart(opts) {\n  const ctx = this;\n\n  return function thunk(done) {\n    const fields = {};\n    const fileFields = {};\n    const files = [];\n    const form =\n      opts.IncomingForm instanceof formidable.IncomingForm\n        ? opts.IncomingForm\n        : new formidable.IncomingForm(opts);\n\n    form.on('error', done);\n    form.on('aborted', done);\n    form.on('file', (name, file) => {\n      files.push(file);\n      fileFields[name] = fileFields[name] || [];\n      fileFields[name].push(file);\n    });\n    form.on('field', (name, field) => {\n      // eslint-disable-next-line no-prototype-builtins\n      if (fields.hasOwnProperty(name)) {\n        if (Array.isArray(fields[name])) {\n          fields[name].push(field);\n        } else {\n          fields[name] = [fields[name], field];\n        }\n      } else {\n        fields[name] = field;\n      }\n    });\n    form.on('end', () => {\n      done(null, {\n        fields: { ...fields, ...fileFields },\n        files,\n      });\n    });\n    form.parse(ctx.req);\n  };\n}\n\n/**\n * > Parse a different type of request bodies. By default accepts\n * and can parse JSON, JSON-API, JSON-Patch, text, form, urlencoded\n * and buffer bodies.\n *\n * @param {Object}   `ctx` koa context\n * @param {Object}   `options` plugin options\n * @param {Function} `next` next middleware\n * @api private\n */\n\n// eslint-disable-next-line max-statements, consistent-return\nexport function* parseBody(ctx, options, next) {\n  const fields = typeof options.fields === 'string' ? options.fields : 'fields';\n  const files = typeof options.files === 'string' ? options.files : 'files';\n  const { custom } = options.extendTypes;\n\n  if (custom && custom.length > 0 && ctx.request.is(custom)) {\n    yield* options.handler.call(ctx, ctx, options, next);\n    return yield* next;\n  }\n  if (options.detectJSON(ctx) || ctx.request.is(options.extendTypes.json)) {\n    ctx.app.jsonStrict =\n      typeof options.jsonStrict === 'boolean' ? options.jsonStrict : true;\n    ctx.request[fields] = yield ctx.request.json(options.jsonLimit);\n    return yield* next;\n  }\n  if (\n    ctx.request.is(options.extendTypes.form || options.extendTypes.urlencoded)\n  ) {\n    const res = yield ctx.request.urlencoded(options.formLimit);\n    ctx.request[fields] = res;\n    return yield* next;\n  }\n  if (options.buffer && ctx.request.is(options.extendTypes.buffer)) {\n    ctx.request.body = yield ctx.request.buffer(options.bufferLimit);\n    return yield* next;\n  }\n  if (ctx.request.is(options.extendTypes.text)) {\n    const limit = options.textLimit;\n    const body = yield ctx.request.text(limit);\n\n    ctx.request.body = body;\n    return yield* next;\n  }\n  if (options.multipart && ctx.request.is(options.extendTypes.multipart)) {\n    const result = yield ctx.request.multipart(options);\n    ctx.request[fields] = result.fields;\n    ctx.request[files] = result.files;\n    return yield* next;\n  }\n}\n"]}